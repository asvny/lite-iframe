{"version":3,"file":"mylib.cjs.production.min.js","sources":["../src/index.ts"],"sourcesContent":["interface ControllerInterface {\n  connectedCallback(): void;\n  warmUp(): void;\n  addIframe(): void;\n}\n\ninterface Adapters {\n  youtube: typeof Youtube;\n  unknown: typeof Unknown;\n}\n\ntype None = void;\ntype Maybe<T> = T | None;\n\ntype AdapterKeys = keyof Adapters;\ntype AdapterClass = typeof Youtube | typeof Unknown;\ntype Adapter = Youtube | Unknown;\n\ntype PrefetchKind = 'prefetch' | 'preload' | 'preconnect';\ntype PrefetchAs = 'image' | 'style' | 'frame' | 'iframe' | 'fetch';\n\nfunction addPrefetch(kind: PrefetchKind, url: string, as: Maybe<PrefetchAs>) {\n  const linkElem = document.createElement('link');\n  linkElem.rel = kind;\n  linkElem.href = url;\n  if (as) {\n    linkElem.as = as;\n  }\n  linkElem.crossOrigin = 'true';\n  document.head.append(linkElem);\n}\n\nclass Unknown implements ControllerInterface {\n  public preconnected: boolean;\n  private src: Maybe<string>;\n  private instance: LiteIframe;\n  private io: Maybe<IntersectionObserver>;\n\n  constructor(instance: LiteIframe, src: string) {\n    this.instance = instance;\n    this.src = src;\n    this.preconnected = false;\n\n    this.warmUp = this.warmUp.bind(this);\n    this.addIframe = this.addIframe.bind(this);\n    this.handleIntersection = this.handleIntersection.bind(this);\n\n    if ('IntersectionObserver' in window) {\n      this.io = new IntersectionObserver(this.handleIntersection);\n    } else {\n      this.handleIframe();\n    }\n  }\n\n  public connectedCallback() {\n    if (this.io) {\n      this.io.observe(this.instance);\n    }\n  }\n\n  private handleIntersection(data: any) {\n    if (data[0].isIntersecting) {\n      this.handleIframe();\n      this.cleanup();\n    }\n  }\n\n  private handleIframe() {\n    this.addIframe();\n  }\n\n  private cleanup() {\n    if (this.io) {\n      this.io.disconnect();\n    }\n  }\n\n  public warmUp() {\n    if (this.src) addPrefetch('preload', this.src, 'iframe');\n  }\n\n  public addIframe() {\n    const iframeHTML = `\n      <iframe \n        width=\"560\" \n        height=\"315\" \n        frameborder=\"0\" \n        loading=\"lazy\"\n        allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen\n        src=\"${this.src}\">\n      </iframe>`;\n\n    this.instance.insertAdjacentHTML('beforeend', iframeHTML);\n  }\n}\n\nclass Youtube implements ControllerInterface {\n  public preconnected: boolean;\n  private src: Maybe<string>;\n  private instance: LiteIframe;\n  private posterUrl: string;\n\n  public constructor(instance: LiteIframe, src: string) {\n    this.preconnected = false;\n\n    this.instance = instance;\n    this.src = src;\n\n    this.warmUp = this.warmUp.bind(this);\n    this.addIframe = this.addIframe.bind(this);\n\n    this.posterUrl = `https://i.ytimg.com/vi/${this.videoId}/hqdefault.jpg`;\n    addPrefetch('preload', this.posterUrl, 'image');\n  }\n\n  public connectedCallback() {\n    this.instance.style.backgroundImage = `url(\"${this.posterUrl}\")`;\n\n    const playBtn = document.createElement('div');\n    playBtn.classList.add('lty-playbtn');\n    this.instance.append(playBtn);\n\n    this.instance.addEventListener('pointerover', this.warmUp, {\n      once: true,\n    });\n\n    this.instance.addEventListener('click', () => this.addIframe());\n  }\n\n  public warmUp() {\n    addPrefetch('preconnect', 'https://www.youtube-nocookie.com');\n    addPrefetch('preconnect', 'https://www.google.com');\n  }\n\n  public addIframe() {\n    const iframeHTML = `\n      <iframe \n        width=\"560\" \n        height=\"315\" \n        frameborder=\"0\" \n        loading=\"lazy\"\n        allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen\n        src=\"${this.src}?autoplay=1\">\n      </iframe>`;\n\n    this.instance.insertAdjacentHTML('beforeend', iframeHTML);\n    this.instance.classList.add('lyt-activated');\n  }\n\n  private get videoId() {\n    if (this.src) {\n      let youtTubeIDRegex = /^.*(?:(?:youtu\\.be\\/|v\\/|vi\\/|u\\/\\w\\/|embed\\/)|(?:(?:watch)?\\?v(?:i)?=|\\&v(?:i)?=))([^#\\&\\?]*).*/;\n      let matchers = this.src.match(youtTubeIDRegex);\n      return matchers && matchers[1] ? matchers[1] : null;\n    }\n\n    return null;\n  }\n}\n\nconst adapters: Adapters = {\n  youtube: Youtube,\n  unknown: Unknown,\n};\n\nclass LiteIframe extends HTMLElement {\n  private controller: Adapter;\n  constructor() {\n    super();\n\n    let src = this.getAttribute('src');\n    let type = this.getAttribute('type') || 'unknown';\n    let adapter = adapters[type as AdapterKeys];\n\n    this.controller = new adapter(this, src || '');\n  }\n\n  connectedCallback() {\n    this.controller.connectedCallback();\n  }\n\n  public warmConnections() {\n    if (this.controller.preconnected) return;\n\n    this.controller.warmUp();\n    this.controller.preconnected = true;\n  }\n}\n\ncustomElements.define('lite-iframe', LiteIframe);\n"],"names":["addPrefetch","kind","url","as","linkElem","document","createElement","rel","href","crossOrigin","head","append","Unknown","instance","src","preconnected","warmUp","this","bind","addIframe","handleIntersection","window","io","IntersectionObserver","handleIframe","connectedCallback","observe","data","isIntersecting","cleanup","disconnect","insertAdjacentHTML","adapters","youtube","posterUrl","videoId","style","backgroundImage","playBtn","classList","add","addEventListener","once","_this","matchers","match","unknown","LiteIframe","getAttribute","type","_this2","controller","adapter","warmConnections","HTMLElement","customElements","define"],"mappings":"qoCAqBA,SAASA,EAAYC,EAAoBC,EAAaC,OAC9CC,EAAWC,SAASC,cAAc,QACxCF,EAASG,IAAMN,EACfG,EAASI,KAAON,EACZC,IACFC,EAASD,GAAKA,GAEhBC,EAASK,YAAc,OACvBJ,SAASK,KAAKC,OAAOP,OAGjBQ,wBAMQC,EAAsBC,QAC3BD,SAAWA,OACXC,IAAMA,OACNC,cAAe,OAEfC,OAASC,KAAKD,OAAOE,KAAKD,WAC1BE,UAAYF,KAAKE,UAAUD,KAAKD,WAChCG,mBAAqBH,KAAKG,mBAAmBF,KAAKD,MAEnD,yBAA0BI,YACvBC,GAAK,IAAIC,qBAAqBN,KAAKG,yBAEnCI,0CAIFC,kBAAA,WACDR,KAAKK,SACFA,GAAGI,QAAQT,KAAKJ,aAIjBO,mBAAA,SAAmBO,GACrBA,EAAK,GAAGC,sBACLJ,oBACAK,cAIDL,aAAA,gBACDL,eAGCU,QAAA,WACFZ,KAAKK,SACFA,GAAGQ,gBAILd,OAAA,WACDC,KAAKH,KAAKd,EAAY,UAAWiB,KAAKH,IAAK,aAG1CK,UAAA,gBAWAN,SAASkB,mBAAmB,sPAHtBd,KAAKH,iCAuEdkB,EAAqB,CACzBC,8BA3DmBpB,EAAsBC,QAClCC,cAAe,OAEfF,SAAWA,OACXC,IAAMA,OAENE,OAASC,KAAKD,OAAOE,KAAKD,WAC1BE,UAAYF,KAAKE,UAAUD,KAAKD,WAEhCiB,oCAAsCjB,KAAKkB,yBAChDnC,EAAY,UAAWiB,KAAKiB,UAAW,sCAGlCT,kBAAA,2BACAZ,SAASuB,MAAMC,wBAA0BpB,KAAKiB,mBAE7CI,EAAUjC,SAASC,cAAc,OACvCgC,EAAQC,UAAUC,IAAI,oBACjB3B,SAASF,OAAO2B,QAEhBzB,SAAS4B,iBAAiB,cAAexB,KAAKD,OAAQ,CACzD0B,MAAM,SAGH7B,SAAS4B,iBAAiB,SAAS,kBAAME,EAAKxB,kBAG9CH,OAAA,WACLhB,EAAY,aAAc,oCAC1BA,EAAY,aAAc,6BAGrBmB,UAAA,gBAWAN,SAASkB,mBAAmB,sPAHtBd,KAAKH,2CAIXD,SAAS0B,UAAUC,IAAI,uDAIxBvB,KAAKH,IAAK,KAER8B,EAAW3B,KAAKH,IAAI+B,MADF,2GAEfD,GAAYA,EAAS,GAAKA,EAAS,GAAK,YAG1C,mMAMTE,QAASlC,GAGLmC,yCAKEjC,yBAAWkC,aAAa,OACxBC,EAAOC,EAAKF,aAAa,SAAW,mBAGnCG,WAAa,IAAIC,EAFRpB,EAASiB,iIAEanC,GAAO,wHAG7CW,kBAAA,gBACO0B,WAAW1B,uBAGX4B,gBAAA,WACDpC,KAAKkC,WAAWpC,oBAEfoC,WAAWnC,cACXmC,WAAWpC,cAAe,SApBVuC,cAwBzBC,eAAeC,OAAO,cAAeT"}